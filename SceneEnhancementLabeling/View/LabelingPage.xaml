<Page x:Class="SceneEnhancementLabeling.View.LabelingPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SceneEnhancementLabeling.View"
      xmlns:common="clr-namespace:SceneEnhancementLabeling.Common"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:models="clr-namespace:SceneEnhancementLabeling.Models"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="LabelingPage"
      DataContext="{Binding Labeling, Source={StaticResource Locator}}">

    <Page.Resources>
        <Style x:Key="RadioButtonListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="2, 2, 2, 0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border Background="Transparent">
                                        <CheckBox Content="{TemplateBinding ContentPresenter.Content}" VerticalAlignment="Center" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <RoutedUICommand x:Key="MySaveCommand" Text="Save" />
        <RoutedUICommand x:Key="MyResetCommand" Text="Reset" />
        <RoutedUICommand x:Key="MyOpenOuputCommand" Text="Open Output" />
        
    </Page.Resources>
    <Page.CommandBindings>
        <CommandBinding Command="{StaticResource MySaveCommand}" Executed="MySaveCommand" />
        <CommandBinding Command="{StaticResource MyResetCommand}" Executed="MyResetCommand" />
        <CommandBinding Command="{StaticResource MyOpenOuputCommand}" Executed="MyOpenOutputCommand" />
    </Page.CommandBindings>
    <Page.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{StaticResource MySaveCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="{StaticResource MyResetCommand}" />
        <KeyBinding Key="O" Modifiers="Ctrl+Alt" Command="{StaticResource MyOpenOuputCommand}" />
    </Page.InputBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Labeling" FontWeight="Bold" FontSize="30" Margin="12"/>
            <ListView Grid.Column="0" Grid.ColumnSpan="2" Margin="150,6,300,6" ItemsSource="{Binding PreferenceColors}" VerticalContentAlignment="Center">
                <ListView.Resources>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="MinHeight" Value="10" />
                        <Setter Property="Height" Value="10" />
                    </Style>
                </ListView.Resources>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="SolidColorBrush">
                        <Rectangle Fill="{Binding}" Stroke="Black" StrokeThickness="2" Width="36" Height="36" PreviewMouseLeftButtonUp="PreferenceColor_OnPreviewMouseLeftButtonUp"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="36,0">
                <Button Content="Previous Step" Margin="12,0,0,0" Width="120" Height="30" HorizontalAlignment="Right" Command="{Binding PreviousStepCommand}" IsEnabled="{Binding IsPreviousStepEnabeld}"/>
                <Button Content="Next Step" Margin="12,0,0,0" Width="120" Height="30" HorizontalAlignment="Right" Command="{Binding NextStepCommand}" IsEnabled="{Binding IsNextStepEnabled}"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" Margin="12,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Button Content="Browse..." Width="100" Height="30" Command="{Binding OpenFolderCommand}" Visibility="{Binding IsBrowseEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Grid Margin="12">
                    <Grid>
                        <Image x:Name="Image" Source="{Binding Bitmap}" Stretch="Uniform">
                            <i:Interaction.Behaviors>
                                <common:ImageBehaviorMouseDownPointSampleToColor SelectedColor="{Binding SelectedColor, Mode=TwoWay}"/>
                                <common:ImageBehaviorMouseDownPointToPopup IsPopupOpen="{Binding IsPopOpen, Mode=TwoWay}" IsEnabled="{Binding IsComponentLabelStepEnabled, Mode=TwoWay}"/>
                            </i:Interaction.Behaviors>
                        </Image>
                    </Grid>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Center" Content="&lt;" Width="30" Height="20" Visibility="{Binding CanPrevious, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding PreviousCommand}"/>
                    <Button HorizontalAlignment="Right" VerticalAlignment="Center" Content="&gt;" Width="30" Height="20" Visibility="{Binding CanNext, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding NextCommand}"/>
                </Grid>
            </Grid>
            <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" common:ScrollViewerEx.ScrollToTop="{Binding IsScrollToTop, Mode=TwoWay}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel IsEnabled="{Binding IsColorLabelStepEnabled}">
                        <Grid>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="Color Labeling" FontSize="20" FontWeight="Bold"/>
                                <TextBlock Text="*" Foreground="Red" FontSize="20" FontWeight="Bold" Visibility="{Binding IsEditingColor, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="12,0"/>
                            </StackPanel>
                        </Grid>
                        <TabControl ItemsSource="{Binding Category}" SelectedIndex="{Binding CategoryIndex, Mode=TwoWay}" Margin="0,6">
                            <TabControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </TabControl.ItemTemplate>
                            <TabControl.ContentTemplate>
                                <DataTemplate DataType="{x:Type models:CategoryItem}">
                                    <Grid Margin="12">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <common:RadioButtonEx IsCheckedReal="{Binding IsChecked0}" PreviewMouseLeftButtonUp="ColorPlatte_OnMouseUp" Tag="0">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Rectangle Fill="{Binding Color0, Mode=TwoWay}" Stroke="Black" StrokeThickness="1" Width="100" Height="50"/>
                                                <TextBlock Text="{Binding Color0, Mode=TwoWay}" VerticalAlignment="Center" Margin="12"/>
                                            </StackPanel>
                                        </common:RadioButtonEx>
                                        <common:RadioButtonEx Grid.Row="1" IsCheckedReal="{Binding IsChecked1}" PreviewMouseLeftButtonUp="ColorPlatte_OnMouseUp" Tag="1">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Rectangle Fill="{Binding Color1, Mode=TwoWay}" Stroke="Black" StrokeThickness="1" Width="100" Height="50"/>
                                                <TextBlock Text="{Binding Color1, Mode=TwoWay}" VerticalAlignment="Center" Margin="12"/>
                                            </StackPanel>
                                        </common:RadioButtonEx>
                                        <common:RadioButtonEx Grid.Row="2" IsCheckedReal="{Binding IsChecked2}" PreviewMouseLeftButtonUp="ColorPlatte_OnMouseUp" Tag="2">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Rectangle Fill="{Binding Color2, Mode=TwoWay}" Stroke="Black" StrokeThickness="1" Width="100" Height="50"/>
                                                <TextBlock Text="{Binding Color2, Mode=TwoWay}" VerticalAlignment="Center" Margin="12"/>
                                            </StackPanel>
                                        </common:RadioButtonEx>
                                    </Grid>
                                </DataTemplate>
                            </TabControl.ContentTemplate>
                        </TabControl>
                    </StackPanel>
                    <StackPanel Grid.Row="1">
                        <TextBlock Text="Output Preview" FontSize="20" FontWeight="Bold"/>
                        <TextBox Text="{Binding OutputContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" TextWrapping="WrapWithOverflow" Height="400"/>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Margin="0,12,0,0">
                        <TextBlock Text="Output" FontSize="20" FontWeight="Bold"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Location"/>
                            <TextBox Text="{Binding OutputPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Margin="0,6" Grid.Row="1" Height="27" AcceptsReturn="True"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="3" VerticalAlignment="Bottom">
                        <Button Content="Reset" Width="100" Height="50" Margin="12" Command="{StaticResource MyResetCommand}"/>
                        <Button Content="Save" Width="100" Height="50" Margin="12" Command="{StaticResource MySaveCommand}"/>
                        <Button Content="Open Output" Width="100" Height="50" Margin="12" Command="{Binding OpenOutputCommand}"/>
                    </StackPanel>
                </Grid>
            </ScrollViewer>
        </Grid>
        <Popup Grid.Row="0" Grid.RowSpan="2" StaysOpen="False" IsOpen="{Binding IsPopOpen, Mode=TwoWay}" Placement="MousePoint">
            <Border Background="White" Width="600" Height="750" Padding="12">
                <StackPanel Margin="0,12,0,0" IsEnabled="{Binding IsComponentLabelStepEnabled}">
                    <Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="Component Labeling" FontSize="20" FontWeight="Bold"/>
                            <TextBlock Text="*" Foreground="Red" FontSize="20" FontWeight="Bold" Visibility="{Binding IsEditingComponent, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="12,0"/>
                        </StackPanel>
                    </Grid>
                    <TabControl ItemsSource="{Binding ComponentsCollection}" SelectedIndex="{Binding CollectionIndex, Mode=TwoWay}" TabStripPlacement="Left" Margin="0,6" MaxHeight="720">
                        <TabControl.Template>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="Gray" BorderThickness="1" Margin="-2,0,0,0" Grid.Column="1" Panel.ZIndex="0">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden" Grid.Column="0">
                                        <TabPanel x:Name="HeaderPanel" IsItemsHost="True" Margin="2,2,2,0" Panel.ZIndex="1"/>
                                    </ScrollViewer>
                                </Grid>
                            </ControlTemplate>
                        </TabControl.Template>
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <!--<TextBlock Text="√" FontSize="20" FontWeight="Bold" Foreground="Red" Margin="0,0,3,0" Visibility="{Binding IsDirty, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center"/>-->
                                    <Grid Height="30" Grid.Column="1">
                                        <TextBlock Text="{Binding Key}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <!--<TextBlock Text="{Binding NameCn}" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>-->
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        <TabControl.ContentTemplate>
                            <DataTemplate DataType="{x:Type models:GroupedComponents}">
                                <Grid Margin="12,6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="200"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="200"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="A. Select a component type for your selected object." TextWrapping="Wrap" FontWeight="Bold"/>
                                    <ListView ItemsSource="{Binding Data}" SelectedIndex="{Binding SelectedComponentIndex, Mode=TwoWay}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,6" Grid.Row="1">
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Horizontal" IsItemsHost="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="6">
                                                    <TextBlock Text="{Binding Name}" HorizontalAlignment="Center"/>
                                                    <TextBlock Text="{Binding NameCn}" HorizontalAlignment="Center"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <TextBlock Grid.Row="2" Text="B. Select a category type where the component should be place to." TextWrapping="Wrap" FontWeight="Bold"/>
                                    <ListView ItemsSource="{Binding Category}" SelectedIndex="{Binding SelectedCategoryIndex, Mode=TwoWay}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,6" Grid.Row="3">
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Horizontal" IsItemsHost="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}" Margin="6"/>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <TextBlock Grid.Row="4" Text="C. Select directions in what this component is. (You can only select two of three)" TextWrapping="Wrap" FontWeight="Bold"/>
                                    <StackPanel Grid.Row="5">
                                        <StackPanel Orientation="Horizontal" Margin="0,6">
                                            <TextBlock Text="Left/Right:" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                            <ListBox Style="{StaticResource RadioButtonListBoxStyle}" SelectionMode="Single">
                                                <ListBoxItem Content="Left" IsSelected="{Binding IsLeft, Mode=TwoWay}"/>
                                                <ListBoxItem Content="Right" IsSelected="{Binding IsRight, Mode=TwoWay}"/>
                                            </ListBox>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,6">
                                            <TextBlock Text="Front/Back:" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                            <ListBox Style="{StaticResource RadioButtonListBoxStyle}" SelectionMode="Single">
                                                <ListBoxItem Content="Front" IsSelected="{Binding IsFront, Mode=TwoWay}"/>
                                                <ListBoxItem Content="Back" IsSelected="{Binding IsBack, Mode=TwoWay}"/>
                                            </ListBox>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,6">
                                            <TextBlock Text="Center:" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                            <ListBox Style="{StaticResource RadioButtonListBoxStyle}" SelectionMode="Single">
                                                <ListBoxItem Content="Center" IsSelected="{Binding IsCenter, Mode=TwoWay}"/>
                                            </ListBox>
                                        </StackPanel>
                                        <TextBlock Foreground="Red" Text="{Binding ErrorMessage, Mode=TwoWay}" Margin="0,6"/>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                    <Button Content="OK" Command="{Binding OkCommand}" Width="100" Height="30" HorizontalAlignment="Right" Margin="0,12"/>
                </StackPanel>
            </Border>
        </Popup>
        </Grid>
</Page>



